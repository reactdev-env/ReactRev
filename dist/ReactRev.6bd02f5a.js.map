{"mappings":"AAAA,iBAAiB;AAEjB,MAAM,SAAO,MAAM,aAAa,CAAC,OAChC;IAAC,IAAG;AAAQ,GAEZ,MAAM,aAAa,CAAC,OAAO;IAAC,IAAG;AAAO,GACvC;IAAC,MAAM,aAAa,CAAC,MAAK,CAAC,GAAE;IAC7B,MAAM,aAAa,CAAC,MAAK,CAAC,GAAE;CAAe,GAE3C,MAAM,aAAa,CAAC,OAAO;IAAC,IAAG;AAAQ,GACvC;IAAC,MAAM,aAAa,CAAC,MAAK,CAAC,GAAE;IAC7B,MAAM,aAAa,CAAC,MAAK,CAAC,GAAE;CAAe;AAG3C,QAAQ,GAAG,CAAC;AAEZ,MAAM,OAAK,SAAS,UAAU,CAAC,SAAS,cAAc,CAAC;AAGvD,iIAAiI;AAEjI,iDAAiD;AACjD,qIAAqI;AAErI,4DAA4D;AAC5D,qEAAqE;AACrE,KAAK,MAAM,CAAC,SAGZ,6BAA6B;CAC7B,2BAA2B;CAC3B,+CAA+C;CAC/C,qDAAqD;CACrD,yGAAyG","sources":["App.js"],"sourcesContent":["//Nested Elements\r\n\r\nconst parent=React.createElement(\"div\",\r\n {id:\"parent\"}, \r\n\r\n React.createElement(\"div\", {id:\"child\"}, \r\n[React.createElement(\"h1\",{},\"I am h1 Tag\"),\r\nReact.createElement(\"h2\",{},\"I am h2 Tag\")]),\r\n\r\nReact.createElement(\"div\", {id:\"child2\"}, \r\n[React.createElement(\"h1\",{},\"I am h1 Tag\"),\r\nReact.createElement(\"h2\",{},\"I am h2 Tag\")]));\r\n\r\n\r\nconsole.log(parent);\r\n\r\nconst root=ReactDOM.createRoot(document.getElementById(\"root\"));\r\n\r\n\r\n//Ikkada parent anedi oka object and the object is the react element. The react element becomes the html that browsers understand\r\n\r\n//ReactElemnt(object)=> Html(Browser understands)\r\n//if there are more than one child in the object we can wrap inside the [] brackets. The array contains only child elemnts of object.\r\n\r\n//const ironman=React.createElement(\"h1\",{},\"This is react\")\r\n//const Jarvis=ReactDOM.createRoot(document.getElementById(\"Helix\"));\r\nroot.render(parent);\r\n\r\n\r\n//Hello world using JS, React\r\n//Bring react into our code\r\n//Making sure that scriptis bottom of the body.\r\n//React element is object => Html browser understands\r\n//createroot and inject the root into the ReactDOM and rendering the heading or object into the React DOM"],"names":[],"version":3,"file":"ReactRev.6bd02f5a.js.map","sourceRoot":"/__parcel_source_root/"}